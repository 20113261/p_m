# coding=utf-8
import hashlib
import re
from collections import defaultdict
from shutil import copyfile

import db_img
import db_localhost
import redis

redis_dict = redis.Redis(host='10.10.180.145', port=6379, db=10)


def get_mid_image_list_dict(s_type):
    _res = defaultdict(list)
    if s_type == 'attr':
        sql = 'select id, image_list from data_prepare.attraction_tmp'
    elif s_type == 'rest':
        sql = 'select id, image_list from data_prepare.restaurant_tmp'
    elif s_type == 'shop':
        sql = 'select id, image_list from data_prepare.shopping_tmp'
    else:
        raise TypeError()
    for line in db_localhost.QueryBySQL(sql):
        for url in line['image_list'].split('|'):
            _res[line['id']].append(hashlib.md5(url).hexdigest() + '.jpg')
    return _res


def insert_db(args):
    sql = 'insert ignore into ' + args[
        0] + '(file_name,sid,url,bucket_name,pic_size,url_md5,pic_md5,source,`use`,status) values(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)'
    return db_img.ExecuteSQL(sql, args[1:])


if __name__ == '__main__':
    # 需要修改的变量
    S_TYPE = 'attr'
    src_path = '/search/image/img_url_1119_celery/'
    dst_path = '/search/image/attr_result_1119/'
    RELATION_TABLE = 'attr_bucket_relation'
    BUCKET_NAME = 'mioji-attr'

    # -----------------------------------------------

    # Prepare
    pattern = re.compile('-d(\d+)')
    count = 0
    source_id_set = set()
    mid_image_list_dict = get_mid_image_list_dict(S_TYPE)

    # Run
    count = 0
    for mid, img_list in mid_image_list_dict.items():
        for img_name in img_list:
            img_count = redis_dict.get(mid)
            if not img_count:
                new_name = mid + '_1.jpg'
                redis_dict.set(mid, "1")
            else:
                new_count = str(int(img_count) + 1)
                redis_dict.set(mid, new_count)
                new_name = mid + "_" + new_count + '.jpg'
            try:
                flag, y, x = redis_dict.get(img_name + "_flag").split('###')
            except:
                continue
            size = str((y, x))
            img_url = redis_dict.get(img_name)
            if flag == '0':
                count += 1
                # (RELATION_TABLE, file_name, miaoji_id, url, BUCKET_NAME, size, md5_name, pic_md5, 'machine', '1','online')
                data = (RELATION_TABLE, new_name, new_name.split('_', 1)[0], img_url, BUCKET_NAME, size,
                        img_name.replace('.jpg', ''),
                        '',
                        'machine', '1', 'online')
                copyfile(src_path + img_name, dst_path + new_name)
                insert_db(data)
                if count % 500 == 0:
                    print data
    print count
